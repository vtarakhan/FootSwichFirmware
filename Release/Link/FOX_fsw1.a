;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.03.8a Evaluation
;Automatic Program Generator
;© Copyright 1998-2008 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 21.11.2008
;Author  : Freeware, for evaluation and non-commercial use only
;Company :
;Comments:
;
;
;Chip type           : ATmega16L
;Program type        : Application
;Clock frequency     : 4,000000 MHz
;Memory model        : Small
;External RAM size   : 0
;Data Stack size     : 256
;*****************************************************/
;
;#include <mega16a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Alphanumeric LCD Module functions
;#asm
;PCODE: $0000000D VOL: 0
   .equ __lcd_port=0x15 ;PORTC
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 001D #endasm
;#include <lcd.h>
;
;#include <stdlib.h>
;#include <delay.h>
;
;// Standard Input/Output functions
;#include <stdio.h>
;
;#define BUTTON_DELAY 300 // ms
;#define ADC_DELAY 30 // ms
;
;
;//номер миди контроллера для каждой функции устройства (можно сделать настраиваемым, но пока жестко закреплено)
;#define FX1 64 // для остальных кнопок(кроме кнопок смены программ)
;#define FX2 65
;#define FX3 66
;#define FX4 67
;#define FX5 68
;#define FX6 69
;#define FX7 70
;#define FX8 71
;#define EXP 11
;
;//Закрепление определенных функций за конкретными контактами мк
;//конфигурационные кнопки
;#define s_inc_sw    PINB.0
;#define s_dec_sw    PINB.1
;#define s_save_sw   PINB.2
;#define s_load_sw   PINB.3
;//кнопки смены программ(пресетов)
;#define P1_sw       PINA.0
;#define P2_sw       PINA.1
;#define P3_sw       PINA.2
;#define P4_sw       PINA.3
;#define P5_sw       PINA.4
;#define P6_sw       PINA.5
;#define P7_sw       PINA.6
;#define P8_sw       PIND.3
;#define PC_sw       PIND.4
;
;//Пока поддерживается только 10 банков настроек
;//Настройки хранятся в энергонезависимой памяти
;//Эти значения(нули) запишутся в память при программировании,
;//далее при включении/выключении железяки будут хранить настроенное значение
;eeprom unsigned char ucP1[10] = {9,0,0,0,0,0,0,0,0,0};
;eeprom unsigned char ucP2[10] = {11,0,0,0,0,0,0,0,0,0};
;eeprom unsigned char ucP3[10] = {12,0,0,0,0,0,0,0,0,0};
;eeprom unsigned char ucP4[10] = {13,0,0,0,0,0,0,0,0,0};
;eeprom unsigned char ucP5[10] = {11,0,0,0,0,0,0,0,0,0};
;eeprom unsigned char ucP6[10] = {13,0,0,0,0,0,0,0,0,0};
;eeprom unsigned char ucP7[10] = {9,0,0,0,0,0,0,0,0,0};
;eeprom unsigned char ucP8[10] = {12,0,0,0,0,0,0,0,0,0};
;
;
;//4 переключаемых программы(пресета)
;unsigned char nPreset_1 = 0;
;unsigned char nPreset_2 = 0;
;unsigned char nPreset_3 = 0;
;unsigned char nPreset_4 = 0;
;unsigned char nPreset_5 = 0;
;unsigned char nPreset_6 = 0;
;unsigned char nPreset_7 = 0;
;unsigned char nPreset_8 = 0;
;unsigned char ucPC_sw = 0;
;
;//Текущие значения контроллеров
;unsigned char ucFX1_sw = 0;
;unsigned char ucFX2_sw = 0;
;unsigned char ucFX3_sw = 0;
;unsigned char ucFX4_sw = 0;
;unsigned char ucFX5_sw = 0;
;unsigned char ucFX6_sw = 0;
;unsigned char ucFX7_sw = 0;
;unsigned char ucFX8_sw = 0;
;//char ADC_v[4];
;unsigned int ADC_voltage = 0;
;unsigned int ADC_voltage_old = 0;
;//первый активный по умолчанию
;int CurPreset = 1;

	.DSEG
;
;//первый банк грузится при включении
;unsigned char nBnkNum = 1;
;
;void MIDI_CC_send(char cCtrlNum, char cVal)
; 0000 0072 {

	.CSEG
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0073               putchar(0xB0);  //отправляем Control Change сообощение  (пока жестко в первый канал)
;PCODE: $00000012 VOL: 0
;	cCtrlNum -> Y+1
;	cVal -> Y+0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0074               putchar(cCtrlNum);  // с нужным номером миди контроллера
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0075               putchar(cVal);  // и нужным значением
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0076 }
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;
;void MIDI_PC_send(char cPrgNum)
; 0000 0079 {
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 007A               putchar(0xC0);  //отправляем Program Change сообощение  (пока жестко в первый канал)
;PCODE: $0000001E VOL: 0
;	cPrgNum -> Y+0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 007B               putchar(cPrgNum);  // с нужным номером пресета
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 007C }
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;
;void redraw_main_window(void)// перерисовка рабочего окна для дисплея 16х2
; 0000 007F {
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0080 
; 0000 0081        char cPreset_1[4];
; 0000 0082        char cPreset_2[4];
; 0000 0083        char cPreset_3[4];
; 0000 0084        char cPreset_4[4];
; 0000 0085        char cPreset_5[4];
; 0000 0086        char cPreset_6[4];
; 0000 0087        char cPreset_7[4];
; 0000 0088        char cPreset_8[4];
; 0000 0089 
; 0000 008A        lcd_clear();
;PCODE: $00000028 VOL: 0
;	cPreset_1 -> Y+28
;	cPreset_2 -> Y+24
;	cPreset_3 -> Y+20
;	cPreset_4 -> Y+16
;	cPreset_5 -> Y+12
;	cPreset_6 -> Y+8
;	cPreset_7 -> Y+4
;	cPreset_8 -> Y+0
;PCODE: $00000029 VOL: 0
; 0000 008B        itoa((nPreset_1 + 1), cPreset_1);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 008C        lcd_puts(cPreset_1);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 008D 
; 0000 008E        lcd_gotoxy(4, 0);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 008F        itoa((nPreset_2 + 1), cPreset_2);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0090        lcd_puts(cPreset_2);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0091 
; 0000 0092        lcd_gotoxy(7, 0);
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0093        if (ucPC_sw == 0) lcd_putsf("PC");
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0094        if (ucPC_sw == 1) lcd_putsf("CC");
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0095 
; 0000 0096        lcd_gotoxy(9, 0);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0097        itoa((nPreset_3 + 1), cPreset_3);
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0098        lcd_puts(cPreset_3);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0099 
; 0000 009A        lcd_gotoxy(13, 0);
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 009B        itoa((nPreset_4+ 1), cPreset_4);
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 009C        lcd_puts(cPreset_4);
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 009D 
; 0000 009E        lcd_gotoxy(0, 1);
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 009F        itoa((nPreset_5 + 1), cPreset_5);
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 00A0        lcd_puts(cPreset_5);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 00A1 
; 0000 00A2        lcd_gotoxy(4, 1);
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 00A3        itoa((nPreset_6 + 1), cPreset_6);
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 00A4        lcd_puts(cPreset_6);
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 00A5 
; 0000 00A6        lcd_gotoxy(7, 1);
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 00A7        lcd_putsf("  ");
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 00A8        itoa((nPreset_7 + 1), cPreset_7);
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 00A9        lcd_puts(cPreset_7);
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 00AA 
; 0000 00AB        lcd_gotoxy(13, 1);
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 00AC        itoa((nPreset_8+ 1), cPreset_8);
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 00AD        lcd_puts(cPreset_8);
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 00AE 
; 0000 00AF         //убиваем старый курсор
; 0000 00B0          lcd_gotoxy(3, 0);
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 00B1          lcd_putsf(" ");
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 00B2          lcd_gotoxy(12, 0);
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 00B3          lcd_putsf(" ");
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 00B4          lcd_gotoxy(3, 1);
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 00B5          lcd_putsf(" ");
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 00B6          lcd_gotoxy(12, 1);
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 00B7          lcd_putsf(" ");
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 00B8 
; 0000 00B9         //рисуем новый
; 0000 00BA       switch (CurPreset)
;PCODE: $000000B6 VOL: 0
; 0000 00BB        {
; 0000 00BC        		case 1:
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 00BD                 lcd_gotoxy(3, 0);
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 00BE                 lcd_putsf("<");
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 00BF                 break;
;PCODE: $000000C0 VOL: 0
; 0000 00C0             case 2:
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 00C1                 lcd_gotoxy(3, 0);
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 00C2                 lcd_putsf(">");
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 00C3     		    break;
;PCODE: $000000CB VOL: 0
; 0000 00C4             case 3:
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 00C5                 lcd_gotoxy(12, 0);
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
; 0000 00C6                 lcd_putsf("<");
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 00C7                 break;
;PCODE: $000000D6 VOL: 0
; 0000 00C8             case 4:
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 00C9                 lcd_gotoxy(12, 0);
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 00CA                 lcd_putsf(">");
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 00CB     		    break;
;PCODE: $000000E1 VOL: 0
; 0000 00CC             case 5:
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 00CD                 lcd_gotoxy(3, 1);
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 00CE                 lcd_putsf("<");
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 00CF                 break;
;PCODE: $000000EC VOL: 0
; 0000 00D0             case 6:
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 00D1                 lcd_gotoxy(3, 1);
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 00D2                 lcd_putsf(">");
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 00D3     		    break;
;PCODE: $000000F7 VOL: 0
; 0000 00D4             case 7:
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 00D5                 lcd_gotoxy(12, 1);
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 00D6                 lcd_putsf("<");
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0000 00D7                 break;
;PCODE: $00000102 VOL: 0
; 0000 00D8             case 8:
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 00D9                 lcd_gotoxy(12, 1);
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 00DA                 lcd_putsf(">");
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 00DB     		    break;
;PCODE: $0000010D VOL: 0
; 0000 00DC        }
;PCODE: $0000010E VOL: 0
; 0000 00DD }
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;
;void redraw_save_window(void)// перерисовка конфигурационного окна для дисплея 16х2
; 0000 00E0 {
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 00E1        char cBnkNum[4];
; 0000 00E2 
; 0000 00E3        lcd_clear();
;PCODE: $00000114 VOL: 0
;	cBnkNum -> Y+0
;PCODE: $00000115 VOL: 0
; 0000 00E4        lcd_putsf("Save to bank# ");
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0000 00E5        itoa(nBnkNum, cBnkNum);
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 00E6        lcd_puts(cBnkNum);
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 00E7 
; 0000 00E8 }
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;
;
;void redraw_load_window(void)// перерисовка конфигурационного окна для дисплея 16х2
; 0000 00EC {
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 00ED        char cBnkNum[4];
; 0000 00EE 
; 0000 00EF        lcd_clear();
;PCODE: $00000125 VOL: 0
;	cBnkNum -> Y+0
;PCODE: $00000126 VOL: 0
; 0000 00F0        lcd_putsf("Load bank# ");
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 00F1        itoa(nBnkNum, cBnkNum);
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 00F2        lcd_puts(cBnkNum);
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0000 00F3 }
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;
;
;
;// Declare your global variables here
;
;void main(void)
; 0000 00FA {
;PCODE: $00000134 VOL: 0
; 0000 00FB // Declare your local variables here
; 0000 00FC 
; 0000 00FD // Input/Output Ports initialization
; 0000 00FE // Port A initialization
; 0000 00FF // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0100 // State7=P State6=P State5=P State4=P State3=P State2=P State1=P State0=P
; 0000 0101 PORTA=0xFF;
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0000 0102 DDRA=0x00;
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 0103 
; 0000 0104 // Port B initialization
; 0000 0105 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0106 // State7=T State6=T State5=T State4=T State3=P State2=P State1=P State0=P
; 0000 0107 PORTB=0x0F;
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 0108 DDRB=0x00;
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0000 0109 
; 0000 010A // Port C initialization
; 0000 010B // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 010C // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 010D PORTC=0x00;
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 010E DDRC=0x00;
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 010F 
; 0000 0110 // Port D initialization
; 0000 0111 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0112 // State7=T State6=T State5=T State4=T State3=P State2=P State1=T State0=T
; 0000 0113 PORTD=0x1A;
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0000 0114 DDRD=0x00;
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 0115 
; 0000 0116 // Timer/Counter 0 initialization
; 0000 0117 // Clock source: System Clock
; 0000 0118 // Clock value: Timer 0 Stopped
; 0000 0119 // Mode: Normal top=FFh
; 0000 011A // OC0 output: Disconnected
; 0000 011B TCCR0=0x00;
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 011C TCNT0=0x00;
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 011D OCR0=0x00;
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 011E 
; 0000 011F // Timer/Counter 1 initialization
; 0000 0120 // Clock source: System Clock
; 0000 0121 // Clock value: Timer 1 Stopped
; 0000 0122 // Mode: Normal top=FFFFh
; 0000 0123 // OC1A output: Discon.
; 0000 0124 // OC1B output: Discon.
; 0000 0125 // Noise Canceler: Off
; 0000 0126 // Input Capture on Falling Edge
; 0000 0127 // Timer 1 Overflow Interrupt: Off
; 0000 0128 // Input Capture Interrupt: Off
; 0000 0129 // Compare A Match Interrupt: Off
; 0000 012A // Compare B Match Interrupt: Off
; 0000 012B TCCR1A=0x00;
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0000 012C TCCR1B=0x00;
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 012D TCNT1H=0x00;
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 012E TCNT1L=0x00;
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0000 012F ICR1H=0x00;
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 0130 ICR1L=0x00;
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 0131 OCR1AH=0x00;
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 0132 OCR1AL=0x00;
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 0133 OCR1BH=0x00;
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 0134 OCR1BL=0x00;
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 0135 
; 0000 0136 // Timer/Counter 2 initialization
; 0000 0137 // Clock source: System Clock
; 0000 0138 // Clock value: Timer 2 Stopped
; 0000 0139 // Mode: Normal top=FFh
; 0000 013A // OC2 output: Disconnected
; 0000 013B ASSR=0x00;
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 013C TCCR2=0x00;
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 013D TCNT2=0x00;
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 013E OCR2=0x00;
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 013F 
; 0000 0140 // External Interrupt(s) initialization
; 0000 0141 // INT0: On
; 0000 0142 // INT0 Mode: Falling Edge
; 0000 0143 // INT1: Off
; 0000 0144 // INT2: Off
; 0000 0145 /*GICR|=0x40;
; 0000 0146 MCUCR=0x00;
; 0000 0147 MCUCSR=0x00;
; 0000 0148 GIFR=0x40;*/
; 0000 0149 
; 0000 014A MCUCR=0x00;
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 014B MCUCSR=0x00;
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 014C 
; 0000 014D // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 014E TIMSK=0x00;
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 014F 
; 0000 0150 // USART initialization
; 0000 0151 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0152 // USART Receiver: Off
; 0000 0153 // USART Transmitter: On
; 0000 0154 // USART Mode: Asynchronous
; 0000 0155 // USART Baud Rate: 31250
; 0000 0156 UCSRA=0x00;
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 0157 UCSRB=0x08;
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0000 0158 UCSRC=0x86;
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 0159 UBRRH=0x00;
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 015A UBRRL=0x07;
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
; 0000 015B 
; 0000 015C 
; 0000 015D // Analog Comparator initialization
; 0000 015E // Analog Comparator: Off
; 0000 015F // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0160 ACSR=0x80;
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 0161 SFIOR=0x00;
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 0162 ADMUX=7;
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0000 0163 ADCSR=0x87;
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
; 0000 0164 
; 0000 0165 
; 0000 0166 
; 0000 0167 // LCD module initialization
; 0000 0168 lcd_init(16);
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
; 0000 0169 
; 0000 016A       lcd_putsf("XanLab FS v2.0"); //Превед
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 016B       delay_ms(1000);
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0000 016C 
; 0000 016D       nPreset_1 = ucP1[nBnkNum - 1];
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
; 0000 016E             if(nPreset_1 > 127) nPreset_1 = 0; //Если в памяти было что то больше чем 127,
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 016F             //предпологаем, что была память непроинициализированна, устанавливаем значения в 0
; 0000 0170       nPreset_2 = ucP2[nBnkNum - 1];
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
; 0000 0171             if(nPreset_2 > 127) nPreset_2 = 0;
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 0172       nPreset_3 = ucP3[nBnkNum - 1];
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
; 0000 0173             if(nPreset_3 > 127) nPreset_3 = 0;
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
; 0000 0174       nPreset_4 = ucP4[nBnkNum - 1];
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0000 0175             if(nPreset_4 > 127) nPreset_4 = 0;
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0000 0176       nPreset_5 = ucP5[nBnkNum - 1];
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 0177             if(nPreset_5 > 127) nPreset_5 = 0;
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
; 0000 0178       nPreset_6 = ucP6[nBnkNum - 1];
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
; 0000 0179             if(nPreset_6 > 127) nPreset_6 = 0;
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
; 0000 017A       nPreset_7 = ucP7[nBnkNum - 1];
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
; 0000 017B             if(nPreset_7 > 127) nPreset_7 = 0;
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0000 017C       nPreset_8 = ucP8[nBnkNum - 1];
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
; 0000 017D             if(nPreset_8 > 127) nPreset_8 = 0;
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
; 0000 017E 
; 0000 017F       redraw_main_window();
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
; 0000 0180 
; 0000 0181       // Global enable interrupts
; 0000 0182 //#asm("sei")
; 0000 0183 
; 0000 0184 
; 0000 0185 while (1)
;PCODE: $000001E7 VOL: 0
; 0000 0186       {
; 0000 0187         ADCSR |= 0x40;
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0000 0188         ADC_voltage = (ADCW>>2)-3;
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
; 0000 0189          if (ADC_voltage > 112)
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
; 0000 018A            { ADC_voltage=127 ;}
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
; 0000 018B         if ( ADC_voltage != ADC_voltage_old)
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
; 0000 018C           {
; 0000 018D            MIDI_CC_send(EXP, ADC_voltage);
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0000 018E            //lcd_gotoxy(0, 0);
; 0000 018F            //itoa(ADC_voltage, ADC_v);
; 0000 0190            //lcd_puts(ADC_v);
; 0000 0191             ADC_voltage_old = ADC_voltage;
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
; 0000 0192             delay_ms(ADC_DELAY);
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0000 0193           }
; 0000 0194         if (s_inc_sw == 0) //инкремент значения
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
; 0000 0195          {
; 0000 0196            #asm("cli")
;PCODE: $00000205 VOL: 0
	cli
;PCODE: $00000206 VOL: 0
; 0000 0197           switch (CurPreset)
;PCODE: $00000207 VOL: 0
; 0000 0198            {
; 0000 0199                 case 1:
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
; 0000 019A                     if(nPreset_1 < 127)
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
; 0000 019B                         nPreset_1++;
;PCODE: $0000020D VOL: 0
; 0000 019C                     break;
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
; 0000 019D                 case 2:
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
; 0000 019E                     if(nPreset_2 < 127)
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
; 0000 019F                         nPreset_2++;
;PCODE: $00000216 VOL: 0
; 0000 01A0                     break;
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
; 0000 01A1                 case 3:
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
; 0000 01A2                     if(nPreset_3 < 127)
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 01A3                         nPreset_3++;
;PCODE: $0000021F VOL: 0
; 0000 01A4                     break;
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
; 0000 01A5                 case 4:
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
; 0000 01A6                     if(nPreset_4 < 127)
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
; 0000 01A7                         nPreset_4++;
;PCODE: $00000228 VOL: 0
; 0000 01A8                     break;
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
; 0000 01A9                 case 5:
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
; 0000 01AA                     if(nPreset_5 < 127)
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
; 0000 01AB                         nPreset_5++;
;PCODE: $00000231 VOL: 0
; 0000 01AC                     break;
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
; 0000 01AD                 case 6:
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
; 0000 01AE                     if(nPreset_6 < 127)
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
; 0000 01AF                         nPreset_6++;
;PCODE: $0000023A VOL: 0
; 0000 01B0                     break;
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
; 0000 01B1                 case 7:
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
; 0000 01B2                     if(nPreset_7 < 127)
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
; 0000 01B3                         nPreset_7++;
;PCODE: $00000243 VOL: 0
; 0000 01B4                     break;
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
; 0000 01B5                 case 8:
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
; 0000 01B6                     if(nPreset_8 < 127)
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
; 0000 01B7                         nPreset_8++;
;PCODE: $0000024C VOL: 0
; 0000 01B8                     break;
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
; 0000 01B9                 default: break;
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
; 0000 01BA            }
;PCODE: $00000251 VOL: 0
; 0000 01BB                redraw_main_window();
;PCODE: $00000252 VOL: 0
; 0000 01BC                delay_ms(BUTTON_DELAY);
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
; 0000 01BD            #asm("sei")
;PCODE: $00000255 VOL: 0
	sei
;PCODE: $00000256 VOL: 0
; 0000 01BE         };
;PCODE: $00000257 VOL: 0
; 0000 01BF 
; 0000 01C0         if (s_dec_sw == 0) // декремент значения
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
; 0000 01C1          {
; 0000 01C2            #asm("cli")
;PCODE: $0000025B VOL: 0
	cli
;PCODE: $0000025C VOL: 0
; 0000 01C3           switch (CurPreset)
;PCODE: $0000025D VOL: 0
; 0000 01C4            {
; 0000 01C5                 case 1:
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
; 0000 01C6                     if(nPreset_1 > 0)
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
; 0000 01C7                         nPreset_1--;
;PCODE: $00000263 VOL: 0
; 0000 01C8                     break;
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
; 0000 01C9                 case 2:
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
; 0000 01CA                     if(nPreset_2 > 0)
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
; 0000 01CB                         nPreset_2--;
;PCODE: $0000026C VOL: 0
; 0000 01CC                     break;
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
; 0000 01CD                 case 3:
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
; 0000 01CE                     if(nPreset_3 > 0)
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
; 0000 01CF                         nPreset_3--;
;PCODE: $00000275 VOL: 0
; 0000 01D0                     break;
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
; 0000 01D1                 case 4:
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
; 0000 01D2                     if(nPreset_4 > 0)
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
; 0000 01D3                         nPreset_4--;
;PCODE: $0000027E VOL: 0
; 0000 01D4                     break;
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
; 0000 01D5                 case 5:
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
; 0000 01D6                     if(nPreset_5 > 0)
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
; 0000 01D7                         nPreset_5--;
;PCODE: $00000287 VOL: 0
; 0000 01D8                     break;
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
; 0000 01D9                 case 6:
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
; 0000 01DA                     if(nPreset_6 > 0)
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
; 0000 01DB                         nPreset_6--;
;PCODE: $00000290 VOL: 0
; 0000 01DC                     break;
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
; 0000 01DD                 case 7:
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
; 0000 01DE                     if(nPreset_7 > 0)
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
; 0000 01DF                         nPreset_7--;
;PCODE: $00000299 VOL: 0
; 0000 01E0                     break;
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
; 0000 01E1                 case 8:
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
; 0000 01E2                     if(nPreset_8 > 0)
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
; 0000 01E3                         nPreset_8--;
;PCODE: $000002A2 VOL: 0
; 0000 01E4                     break;
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
; 0000 01E5                 default: break;
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
; 0000 01E6            }
;PCODE: $000002A7 VOL: 0
; 0000 01E7                redraw_main_window();
;PCODE: $000002A8 VOL: 0
; 0000 01E8                delay_ms(BUTTON_DELAY);
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
; 0000 01E9            #asm("sei")
;PCODE: $000002AB VOL: 0
	sei
;PCODE: $000002AC VOL: 0
; 0000 01EA         };
;PCODE: $000002AD VOL: 0
; 0000 01EB 
; 0000 01EC         if (s_save_sw == 0) // сохранение в банк
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
; 0000 01ED          {
; 0000 01EE           redraw_save_window();
;PCODE: $000002B1 VOL: 0
; 0000 01EF            delay_ms(BUTTON_DELAY);
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
; 0000 01F0            while(s_save_sw == 0){};
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
; 0000 01F1                  while(1)
;PCODE: $000002BA VOL: 0
; 0000 01F2                  {
; 0000 01F3                   if ((s_inc_sw == 0) && (nBnkNum < 10)) //инкремент банка
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
; 0000 01F4                     {
; 0000 01F5                     #asm("cli")
;PCODE: $000002C5 VOL: 0
	cli
;PCODE: $000002C6 VOL: 0
; 0000 01F6                      nBnkNum++;
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
; 0000 01F7                      redraw_save_window();
;PCODE: $000002CA VOL: 0
; 0000 01F8                      delay_ms(BUTTON_DELAY);
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
; 0000 01F9                      #asm("sei")
;PCODE: $000002CD VOL: 0
	sei
;PCODE: $000002CE VOL: 0
; 0000 01FA                     }
; 0000 01FB                   if ((s_dec_sw == 0) && (nBnkNum > 1)) //декремент банка
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
; 0000 01FC                     {
; 0000 01FD                     #asm("cli")
;PCODE: $000002DA VOL: 0
	cli
;PCODE: $000002DB VOL: 0
; 0000 01FE                      nBnkNum--;
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
; 0000 01FF                      redraw_save_window();
;PCODE: $000002DF VOL: 0
; 0000 0200                      delay_ms(BUTTON_DELAY);
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
; 0000 0201                      #asm("sei")
;PCODE: $000002E2 VOL: 0
	sei
;PCODE: $000002E3 VOL: 0
; 0000 0202                     }
; 0000 0203                   if (s_save_sw == 0) //сохранить банк
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
; 0000 0204                     {
; 0000 0205                     #asm("cli")
;PCODE: $000002E8 VOL: 0
	cli
;PCODE: $000002E9 VOL: 0
; 0000 0206                      ucP1[nBnkNum-1] = nPreset_1;
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
; 0000 0207                      ucP2[nBnkNum-1] = nPreset_2;
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
; 0000 0208                      ucP3[nBnkNum-1] = nPreset_3;
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
; 0000 0209                      ucP4[nBnkNum-1] = nPreset_4;
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
; 0000 020A                      ucP5[nBnkNum-1] = nPreset_5;
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
; 0000 020B                      ucP6[nBnkNum-1] = nPreset_6;
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
; 0000 020C                      ucP7[nBnkNum-1] = nPreset_7;
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
; 0000 020D                      ucP8[nBnkNum-1] = nPreset_8;
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
; 0000 020E                      redraw_main_window();
;PCODE: $00000322 VOL: 0
; 0000 020F                      delay_ms(BUTTON_DELAY);
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
; 0000 0210                      while(s_save_sw == 0){};
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
; 0000 0211                      #asm("sei")
;PCODE: $0000032B VOL: 0
	sei
;PCODE: $0000032C VOL: 0
; 0000 0212                      break;
;PCODE: $0000032D VOL: 0
; 0000 0213                     }
; 0000 0214                   }
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
; 0000 0215 
; 0000 0216          };
;PCODE: $00000331 VOL: 0
; 0000 0217 
; 0000 0218         if (s_load_sw == 0) // загрузка из банка
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
; 0000 0219          {
; 0000 021A            redraw_load_window();
;PCODE: $00000335 VOL: 0
; 0000 021B            delay_ms(BUTTON_DELAY);
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
; 0000 021C            while(s_load_sw == 0){};
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
; 0000 021D                  while(1)
;PCODE: $0000033E VOL: 0
; 0000 021E                  {
; 0000 021F                   if ((s_inc_sw == 0) && (nBnkNum < 10)) //инкремент банка
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
; 0000 0220                     {
; 0000 0221                     #asm("cli")
;PCODE: $00000349 VOL: 0
	cli
;PCODE: $0000034A VOL: 0
; 0000 0222                      nBnkNum++;
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
; 0000 0223                      redraw_load_window();
;PCODE: $0000034E VOL: 0
; 0000 0224                      delay_ms(BUTTON_DELAY);
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
; 0000 0225                      #asm("sei")
;PCODE: $00000351 VOL: 0
	sei
;PCODE: $00000352 VOL: 0
; 0000 0226                     }
; 0000 0227                   if ((s_dec_sw == 0) && (nBnkNum > 1)) //декремент банка
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
; 0000 0228                     {
; 0000 0229                     #asm("cli")
;PCODE: $0000035E VOL: 0
	cli
;PCODE: $0000035F VOL: 0
; 0000 022A                      nBnkNum--;
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
; 0000 022B                      redraw_load_window();
;PCODE: $00000363 VOL: 0
; 0000 022C                      delay_ms(BUTTON_DELAY);
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
; 0000 022D                      #asm("sei")
;PCODE: $00000366 VOL: 0
	sei
;PCODE: $00000367 VOL: 0
; 0000 022E                     }
; 0000 022F                   if (s_load_sw == 0) //загрузить банк
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
; 0000 0230                     {
; 0000 0231                     #asm("cli")
;PCODE: $0000036C VOL: 0
	cli
;PCODE: $0000036D VOL: 0
; 0000 0232                      nPreset_1 = ucP1[nBnkNum-1];
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
; 0000 0233                         if(nPreset_1 > 127) nPreset_1 = 0;
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
; 0000 0234                      nPreset_2 = ucP2[nBnkNum-1];
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
; 0000 0235                         if(nPreset_2 > 127) nPreset_2 = 0;
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
; 0000 0236                      nPreset_3 = ucP3[nBnkNum-1];
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
; 0000 0237                         if(nPreset_3 > 127) nPreset_3 = 0;
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
; 0000 0238                      nPreset_4 = ucP4[nBnkNum-1];
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
; 0000 0239                         if(nPreset_4 > 127) nPreset_4 = 0;
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
; 0000 023A                      nPreset_5 = ucP5[nBnkNum-1];
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
; 0000 023B                         if(nPreset_5 > 127) nPreset_5 = 0;
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
; 0000 023C                      nPreset_6 = ucP6[nBnkNum-1];
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
; 0000 023D                         if(nPreset_6 > 127) nPreset_6 = 0;
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
; 0000 023E                      nPreset_7 = ucP7[nBnkNum-1];
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
; 0000 023F                         if(nPreset_7 > 127) nPreset_7 = 0;
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
; 0000 0240                      nPreset_8 = ucP8[nBnkNum-1];
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
; 0000 0241                         if(nPreset_8 > 127) nPreset_8 = 0;
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
;PCODE: $000003CC VOL: 0
; 0000 0242                      CurPreset = 1;
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
; 0000 0243                      MIDI_PC_send(nPreset_1);  // Включаем первый пресет
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
; 0000 0244                      redraw_main_window();
;PCODE: $000003D2 VOL: 0
; 0000 0245                      delay_ms(BUTTON_DELAY);
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
; 0000 0246                      while(s_load_sw == 0){};
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
; 0000 0247                      #asm("sei")
;PCODE: $000003DB VOL: 0
	sei
;PCODE: $000003DC VOL: 0
; 0000 0248                      break;
;PCODE: $000003DD VOL: 0
; 0000 0249                     }
; 0000 024A                   }
;PCODE: $000003DE VOL: 0
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
; 0000 024B           }
; 0000 024C 
; 0000 024D         if (P1_sw == 0) // смена программы(пресета)
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
; 0000 024E         { #asm("cli")
;PCODE: $000003E5 VOL: 0
	cli
;PCODE: $000003E6 VOL: 0
; 0000 024F          if (ucPC_sw == 0)
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
; 0000 0250            {
; 0000 0251             MIDI_PC_send(nPreset_1);  // Включаем пресет
;PCODE: $000003E9 VOL: 0
;PCODE: $000003EA VOL: 0
; 0000 0252             CurPreset = 1;// изменяем номер активного пресета
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
; 0000 0253             redraw_main_window();
;PCODE: $000003ED VOL: 0
; 0000 0254             delay_ms(BUTTON_DELAY);
;PCODE: $000003EE VOL: 0
;PCODE: $000003EF VOL: 0
; 0000 0255              }
; 0000 0256          else
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
; 0000 0257          {
; 0000 0258             if(ucFX1_sw == 0)// Если был выключен - включить и наоборот
;PCODE: $000003F2 VOL: 0
;PCODE: $000003F3 VOL: 0
; 0000 0259                 ucFX1_sw = 127;
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
; 0000 025A             else
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
; 0000 025B                 ucFX1_sw = 0;
;PCODE: $000003F8 VOL: 0
; 0000 025C             MIDI_CC_send(FX1, ucFX1_sw);   //отправить комманду
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
; 0000 025D             delay_ms(BUTTON_DELAY);
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
; 0000 025E             }
;PCODE: $00000400 VOL: 0
; 0000 025F           while(P1_sw == 0){};
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
; 0000 0260             #asm("sei")
;PCODE: $00000407 VOL: 0
	sei
;PCODE: $00000408 VOL: 0
; 0000 0261         }
; 0000 0262 
; 0000 0263         if (P2_sw == 0) // смена программы(пресета)
;PCODE: $00000409 VOL: 0
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
; 0000 0264         { #asm("cli")
;PCODE: $0000040D VOL: 0
	cli
;PCODE: $0000040E VOL: 0
; 0000 0265          if (ucPC_sw == 0)
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
; 0000 0266            {
; 0000 0267             MIDI_PC_send(nPreset_2);  // Включаем пресет
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
; 0000 0268             CurPreset = 2;// изменяем номер активного пресета
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
; 0000 0269             redraw_main_window();
;PCODE: $00000415 VOL: 0
; 0000 026A             delay_ms(BUTTON_DELAY);
;PCODE: $00000416 VOL: 0
;PCODE: $00000417 VOL: 0
; 0000 026B              }
; 0000 026C          else
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
; 0000 026D          {
; 0000 026E             if(ucFX2_sw == 0)// Если был выключен - включить и наоборот
;PCODE: $0000041A VOL: 0
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
; 0000 026F                 ucFX2_sw = 127;
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
; 0000 0270             else
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
; 0000 0271                 ucFX2_sw = 0;
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
; 0000 0272             MIDI_CC_send(FX2, ucFX2_sw);   //отправить комманду
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
; 0000 0273             delay_ms(BUTTON_DELAY);
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
; 0000 0274             }
;PCODE: $0000042A VOL: 0
; 0000 0275             while(P2_sw == 0){};
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
; 0000 0276             #asm("sei")
;PCODE: $00000431 VOL: 0
	sei
;PCODE: $00000432 VOL: 0
; 0000 0277         }
; 0000 0278 
; 0000 0279         if (P3_sw == 0) // смена программы(пресета)
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
; 0000 027A         { #asm("cli")
;PCODE: $00000437 VOL: 0
	cli
;PCODE: $00000438 VOL: 0
; 0000 027B          if (ucPC_sw == 0)
;PCODE: $00000439 VOL: 0
;PCODE: $0000043A VOL: 0
; 0000 027C            {
; 0000 027D             MIDI_PC_send(nPreset_3);  // Включаем пресет
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
; 0000 027E             CurPreset = 3;// изменяем номер активного пресета
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
; 0000 027F             redraw_main_window();
;PCODE: $0000043F VOL: 0
; 0000 0280             delay_ms(BUTTON_DELAY);
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
; 0000 0281             }
; 0000 0282          else
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
; 0000 0283          {
; 0000 0284             if(ucFX3_sw == 0)// Если был выключен - включить и наоборот
;PCODE: $00000444 VOL: 0
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
; 0000 0285                 ucFX3_sw = 127;
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
; 0000 0286             else
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
; 0000 0287                 ucFX3_sw = 0;
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
; 0000 0288             MIDI_CC_send(FX3, ucFX3_sw);   //отправить комманду
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
; 0000 0289             delay_ms(BUTTON_DELAY);
;PCODE: $00000452 VOL: 0
;PCODE: $00000453 VOL: 0
; 0000 028A             }
;PCODE: $00000454 VOL: 0
; 0000 028B             while(P3_sw == 0){};
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
;PCODE: $00000459 VOL: 0
;PCODE: $0000045A VOL: 0
; 0000 028C             #asm("sei")
;PCODE: $0000045B VOL: 0
	sei
;PCODE: $0000045C VOL: 0
; 0000 028D         }
; 0000 028E 
; 0000 028F         if (P4_sw == 0) // смена программы(пресета)
;PCODE: $0000045D VOL: 0
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
; 0000 0290         { #asm("cli")
;PCODE: $00000461 VOL: 0
	cli
;PCODE: $00000462 VOL: 0
; 0000 0291           if (ucPC_sw == 0)
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
; 0000 0292            {
; 0000 0293             MIDI_PC_send(nPreset_4);  // Включаем пресет
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
; 0000 0294             CurPreset = 4;// изменяем номер активного пресета
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
; 0000 0295             redraw_main_window();
;PCODE: $00000469 VOL: 0
; 0000 0296             delay_ms(BUTTON_DELAY);
;PCODE: $0000046A VOL: 0
;PCODE: $0000046B VOL: 0
; 0000 0297             while(P4_sw == 0){}; }
;PCODE: $0000046C VOL: 0
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
;PCODE: $00000471 VOL: 0
; 0000 0298          else
;PCODE: $00000472 VOL: 0
;PCODE: $00000473 VOL: 0
; 0000 0299          {
; 0000 029A             if(ucFX4_sw == 0)// Если был выключен - включить и наоборот
;PCODE: $00000474 VOL: 0
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
; 0000 029B                 ucFX4_sw = 127;
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
; 0000 029C             else
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
; 0000 029D                 ucFX4_sw = 0;
;PCODE: $0000047B VOL: 0
;PCODE: $0000047C VOL: 0
; 0000 029E             MIDI_CC_send(FX4, ucFX4_sw);   //отправить комманду
;PCODE: $0000047D VOL: 0
;PCODE: $0000047E VOL: 0
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
; 0000 029F             delay_ms(BUTTON_DELAY);
;PCODE: $00000482 VOL: 0
;PCODE: $00000483 VOL: 0
; 0000 02A0              }
;PCODE: $00000484 VOL: 0
; 0000 02A1              while(P4_sw == 0){};
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
;PCODE: $00000489 VOL: 0
;PCODE: $0000048A VOL: 0
; 0000 02A2             #asm("sei")
;PCODE: $0000048B VOL: 0
	sei
;PCODE: $0000048C VOL: 0
; 0000 02A3         }
; 0000 02A4 
; 0000 02A5         if (P5_sw == 0) // смена значения контроллера(вкл\выкл эффект)
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
;PCODE: $0000048F VOL: 0
;PCODE: $00000490 VOL: 0
; 0000 02A6         { #asm("cli")
;PCODE: $00000491 VOL: 0
	cli
;PCODE: $00000492 VOL: 0
; 0000 02A7         if (ucPC_sw == 0)
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
; 0000 02A8            {
; 0000 02A9             MIDI_PC_send(nPreset_5);  // Включаем пресет
;PCODE: $00000495 VOL: 0
;PCODE: $00000496 VOL: 0
; 0000 02AA             CurPreset = 5;// изменяем номер активного пресета
;PCODE: $00000497 VOL: 0
;PCODE: $00000498 VOL: 0
; 0000 02AB             redraw_main_window();
;PCODE: $00000499 VOL: 0
; 0000 02AC             delay_ms(BUTTON_DELAY);
;PCODE: $0000049A VOL: 0
;PCODE: $0000049B VOL: 0
; 0000 02AD             while(P5_sw == 0){};
;PCODE: $0000049C VOL: 0
;PCODE: $0000049D VOL: 0
;PCODE: $0000049E VOL: 0
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
; 0000 02AE            }
; 0000 02AF          else
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
; 0000 02B0          {
; 0000 02B1             if(ucFX5_sw == 0)// Если был выключен - включить и наоборот
;PCODE: $000004A4 VOL: 0
;PCODE: $000004A5 VOL: 0
;PCODE: $000004A6 VOL: 0
; 0000 02B2                 ucFX5_sw = 127;
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
; 0000 02B3             else
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
; 0000 02B4                 ucFX5_sw = 0;
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
; 0000 02B5             MIDI_CC_send(FX5, ucFX5_sw);   //отправить комманду
;PCODE: $000004AD VOL: 0
;PCODE: $000004AE VOL: 0
;PCODE: $000004AF VOL: 0
;PCODE: $000004B0 VOL: 0
;PCODE: $000004B1 VOL: 0
; 0000 02B6             delay_ms(BUTTON_DELAY);
;PCODE: $000004B2 VOL: 0
;PCODE: $000004B3 VOL: 0
; 0000 02B7             }
;PCODE: $000004B4 VOL: 0
; 0000 02B8             while(P5_sw == 0){};
;PCODE: $000004B5 VOL: 0
;PCODE: $000004B6 VOL: 0
;PCODE: $000004B7 VOL: 0
;PCODE: $000004B8 VOL: 0
;PCODE: $000004B9 VOL: 0
;PCODE: $000004BA VOL: 0
; 0000 02B9             #asm("sei")
;PCODE: $000004BB VOL: 0
	sei
;PCODE: $000004BC VOL: 0
; 0000 02BA         }
; 0000 02BB 
; 0000 02BC         if (P6_sw == 0) // смена значения контроллера(вкл\выкл эффект)
;PCODE: $000004BD VOL: 0
;PCODE: $000004BE VOL: 0
;PCODE: $000004BF VOL: 0
;PCODE: $000004C0 VOL: 0
; 0000 02BD         { #asm("cli")
;PCODE: $000004C1 VOL: 0
	cli
;PCODE: $000004C2 VOL: 0
; 0000 02BE          if (ucPC_sw == 0)
;PCODE: $000004C3 VOL: 0
;PCODE: $000004C4 VOL: 0
; 0000 02BF            {
; 0000 02C0             MIDI_PC_send(nPreset_6);  // Включаем пресет
;PCODE: $000004C5 VOL: 0
;PCODE: $000004C6 VOL: 0
; 0000 02C1             CurPreset = 6;// изменяем номер активного пресета
;PCODE: $000004C7 VOL: 0
;PCODE: $000004C8 VOL: 0
; 0000 02C2             redraw_main_window();
;PCODE: $000004C9 VOL: 0
; 0000 02C3             delay_ms(BUTTON_DELAY);
;PCODE: $000004CA VOL: 0
;PCODE: $000004CB VOL: 0
; 0000 02C4             }
; 0000 02C5          else
;PCODE: $000004CC VOL: 0
;PCODE: $000004CD VOL: 0
; 0000 02C6          { if(ucFX6_sw == 0)// Если был выключен - включить и наоборот
;PCODE: $000004CE VOL: 0
;PCODE: $000004CF VOL: 0
;PCODE: $000004D0 VOL: 0
; 0000 02C7                 ucFX6_sw = 127;
;PCODE: $000004D1 VOL: 0
;PCODE: $000004D2 VOL: 0
; 0000 02C8             else
;PCODE: $000004D3 VOL: 0
;PCODE: $000004D4 VOL: 0
; 0000 02C9                 ucFX6_sw = 0;
;PCODE: $000004D5 VOL: 0
;PCODE: $000004D6 VOL: 0
; 0000 02CA             MIDI_CC_send(FX6, ucFX6_sw);   //отправить комманду
;PCODE: $000004D7 VOL: 0
;PCODE: $000004D8 VOL: 0
;PCODE: $000004D9 VOL: 0
;PCODE: $000004DA VOL: 0
;PCODE: $000004DB VOL: 0
; 0000 02CB             delay_ms(BUTTON_DELAY);
;PCODE: $000004DC VOL: 0
;PCODE: $000004DD VOL: 0
; 0000 02CC             }
;PCODE: $000004DE VOL: 0
; 0000 02CD             while(P6_sw == 0){};
;PCODE: $000004DF VOL: 0
;PCODE: $000004E0 VOL: 0
;PCODE: $000004E1 VOL: 0
;PCODE: $000004E2 VOL: 0
;PCODE: $000004E3 VOL: 0
;PCODE: $000004E4 VOL: 0
; 0000 02CE             #asm("sei")
;PCODE: $000004E5 VOL: 0
	sei
;PCODE: $000004E6 VOL: 0
; 0000 02CF         }
; 0000 02D0 
; 0000 02D1         if (P7_sw == 0) // смена значения контроллера(вкл\выкл эффект)
;PCODE: $000004E7 VOL: 0
;PCODE: $000004E8 VOL: 0
;PCODE: $000004E9 VOL: 0
;PCODE: $000004EA VOL: 0
; 0000 02D2         { #asm("cli")
;PCODE: $000004EB VOL: 0
	cli
;PCODE: $000004EC VOL: 0
; 0000 02D3          if (ucPC_sw == 0)
;PCODE: $000004ED VOL: 0
;PCODE: $000004EE VOL: 0
; 0000 02D4            {
; 0000 02D5             MIDI_PC_send(nPreset_7);  // Включаем пресет
;PCODE: $000004EF VOL: 0
;PCODE: $000004F0 VOL: 0
; 0000 02D6             CurPreset = 7;// изменяем номер активного пресета
;PCODE: $000004F1 VOL: 0
;PCODE: $000004F2 VOL: 0
; 0000 02D7             redraw_main_window();
;PCODE: $000004F3 VOL: 0
; 0000 02D8             delay_ms(BUTTON_DELAY);
;PCODE: $000004F4 VOL: 0
;PCODE: $000004F5 VOL: 0
; 0000 02D9            }
; 0000 02DA          else
;PCODE: $000004F6 VOL: 0
;PCODE: $000004F7 VOL: 0
; 0000 02DB          { if(ucFX7_sw == 0)// Если был выключен - включить и наоборот
;PCODE: $000004F8 VOL: 0
;PCODE: $000004F9 VOL: 0
;PCODE: $000004FA VOL: 0
; 0000 02DC                 ucFX7_sw = 127;
;PCODE: $000004FB VOL: 0
;PCODE: $000004FC VOL: 0
; 0000 02DD             else
;PCODE: $000004FD VOL: 0
;PCODE: $000004FE VOL: 0
; 0000 02DE                 ucFX7_sw = 0;
;PCODE: $000004FF VOL: 0
;PCODE: $00000500 VOL: 0
; 0000 02DF             MIDI_CC_send(FX7, ucFX7_sw);   //отправить комманду
;PCODE: $00000501 VOL: 0
;PCODE: $00000502 VOL: 0
;PCODE: $00000503 VOL: 0
;PCODE: $00000504 VOL: 0
;PCODE: $00000505 VOL: 0
; 0000 02E0             delay_ms(BUTTON_DELAY);
;PCODE: $00000506 VOL: 0
;PCODE: $00000507 VOL: 0
; 0000 02E1          }
;PCODE: $00000508 VOL: 0
; 0000 02E2          while(P7_sw == 0){};
;PCODE: $00000509 VOL: 0
;PCODE: $0000050A VOL: 0
;PCODE: $0000050B VOL: 0
;PCODE: $0000050C VOL: 0
;PCODE: $0000050D VOL: 0
;PCODE: $0000050E VOL: 0
; 0000 02E3          #asm("sei")
;PCODE: $0000050F VOL: 0
	sei
;PCODE: $00000510 VOL: 0
; 0000 02E4         }
; 0000 02E5 
; 0000 02E6         if (P8_sw == 0 )
;PCODE: $00000511 VOL: 0
;PCODE: $00000512 VOL: 0
;PCODE: $00000513 VOL: 0
;PCODE: $00000514 VOL: 0
; 0000 02E7         { #asm("cli")
;PCODE: $00000515 VOL: 0
	cli
;PCODE: $00000516 VOL: 0
; 0000 02E8           if (ucPC_sw == 0)
;PCODE: $00000517 VOL: 0
;PCODE: $00000518 VOL: 0
; 0000 02E9            {
; 0000 02EA             MIDI_PC_send(nPreset_8);  // Включаем пресет
;PCODE: $00000519 VOL: 0
;PCODE: $0000051A VOL: 0
; 0000 02EB             CurPreset = 8;// изменяем номер активного пресета
;PCODE: $0000051B VOL: 0
;PCODE: $0000051C VOL: 0
; 0000 02EC             redraw_main_window();
;PCODE: $0000051D VOL: 0
; 0000 02ED             delay_ms(BUTTON_DELAY);}
;PCODE: $0000051E VOL: 0
;PCODE: $0000051F VOL: 0
; 0000 02EE          else
;PCODE: $00000520 VOL: 0
;PCODE: $00000521 VOL: 0
; 0000 02EF            { if(ucFX8_sw == 0)// Если был выключен - включить и наоборот
;PCODE: $00000522 VOL: 0
;PCODE: $00000523 VOL: 0
;PCODE: $00000524 VOL: 0
; 0000 02F0                 ucFX8_sw = 127;
;PCODE: $00000525 VOL: 0
;PCODE: $00000526 VOL: 0
; 0000 02F1             else
;PCODE: $00000527 VOL: 0
;PCODE: $00000528 VOL: 0
; 0000 02F2                 ucFX8_sw = 0;
;PCODE: $00000529 VOL: 0
;PCODE: $0000052A VOL: 0
; 0000 02F3             MIDI_CC_send(FX8, ucFX8_sw);   //отправить комманду
;PCODE: $0000052B VOL: 0
;PCODE: $0000052C VOL: 0
;PCODE: $0000052D VOL: 0
;PCODE: $0000052E VOL: 0
;PCODE: $0000052F VOL: 0
; 0000 02F4             delay_ms(BUTTON_DELAY);
;PCODE: $00000530 VOL: 0
;PCODE: $00000531 VOL: 0
; 0000 02F5           }
;PCODE: $00000532 VOL: 0
; 0000 02F6           while(P8_sw == 0){};
;PCODE: $00000533 VOL: 0
;PCODE: $00000534 VOL: 0
;PCODE: $00000535 VOL: 0
;PCODE: $00000536 VOL: 0
;PCODE: $00000537 VOL: 0
;PCODE: $00000538 VOL: 0
; 0000 02F7           #asm("sei")
;PCODE: $00000539 VOL: 0
	sei
;PCODE: $0000053A VOL: 0
; 0000 02F8          }
; 0000 02F9        /* if (P8_sw == 0) // смена значения контроллера(вкл\выкл эффект)
; 0000 02FA         {
; 0000 02FB         #asm("cli")
; 0000 02FC             if(ucFX4_sw == 0)
; 0000 02FD                 ucFX4_sw = 127;
; 0000 02FE             else
; 0000 02FF                 ucFX4_sw = 0;
; 0000 0300             MIDI_CC_send(FX4, ucFX4_sw);
; 0000 0301         delay_ms(BUTTON_DELAY);
; 0000 0302         while(P8_sw == 0){};
; 0000 0303         #asm("sei")
; 0000 0304         }     */
; 0000 0305 
; 0000 0306 
; 0000 0307        if (PC_sw == 0) // смена значения контроллера(вкл\выкл эффект)
;PCODE: $0000053B VOL: 0
;PCODE: $0000053C VOL: 0
;PCODE: $0000053D VOL: 0
;PCODE: $0000053E VOL: 0
; 0000 0308         {
; 0000 0309         #asm("cli")
;PCODE: $0000053F VOL: 0
	cli
;PCODE: $00000540 VOL: 0
; 0000 030A             if(ucPC_sw == 0)
;PCODE: $00000541 VOL: 0
;PCODE: $00000542 VOL: 0
; 0000 030B                 ucPC_sw = 1;
;PCODE: $00000543 VOL: 0
;PCODE: $00000544 VOL: 0
; 0000 030C             else
;PCODE: $00000545 VOL: 0
;PCODE: $00000546 VOL: 0
; 0000 030D                 ucPC_sw = 0;
;PCODE: $00000547 VOL: 0
; 0000 030E         redraw_main_window();
;PCODE: $00000548 VOL: 0
;PCODE: $00000549 VOL: 0
; 0000 030F         delay_ms(200);
;PCODE: $0000054A VOL: 0
;PCODE: $0000054B VOL: 0
;PCODE: $0000054C VOL: 0
; 0000 0310         while(PC_sw == 0){};
;PCODE: $0000054D VOL: 0
;PCODE: $0000054E VOL: 0
;PCODE: $0000054F VOL: 0
;PCODE: $00000550 VOL: 0
;PCODE: $00000551 VOL: 0
;PCODE: $00000552 VOL: 0
; 0000 0311         #asm("sei")
;PCODE: $00000553 VOL: 0
	sei
;PCODE: $00000554 VOL: 0
; 0000 0312         }
; 0000 0313      }
;PCODE: $00000555 VOL: 0
;PCODE: $00000556 VOL: 0
;PCODE: $00000557 VOL: 0
; 0000 0314   };
;PCODE: $00000558 VOL: 0
;PCODE: $00000559 VOL: 0
;PCODE: $0000055A VOL: 0
